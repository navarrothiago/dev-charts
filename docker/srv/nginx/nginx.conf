worker_processes auto;

events {
  worker_connections 1024;
}

http {
  include mime.types;
  default_type application/octet-stream;
  sendfile on;

  ssl_certificate /etc/nginx/ssl/3cta.eb.mil.br.crt;
  ssl_certificate_key /etc/nginx/ssl/3cta.eb.mil.br.key;

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;
  ssl_ciphers "TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384";

  server {
    listen 80;
    server_name gitlab.3cta.eb.mil.br;
    return 301 https://$host$request_uri;
  }

  server {
    listen 80;
    server_name redmine.3cta.eb.mil.br;
    return 301 https://$host$request_uri;
  }

  server {
    listen 443 ssl;
    server_name gitlab.3cta.eb.mil.br;
    # This is required to avoid a 413 error when uploading large files (Git LFS). See https://docs.gitlab.com/ee/administration/nginx.html#uploading-large-files
    client_max_body_size 1000m;

    location / {
      proxy_pass https://gitlab:443;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Port $server_port;
      proxy_ssl_session_reuse on;
      proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
      proxy_ssl_ciphers "TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384";
      proxy_ssl_verify off;
    }
  }

  server {
    listen 443 ssl;
    server_name argus.3cta.eb.mil.br;

    location / {
      proxy_pass http://redmine:3000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }
}
